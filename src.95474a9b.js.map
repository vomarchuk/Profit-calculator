{"version":3,"sources":["js/refs.js","js/main.js","js/currency.js","js/amount_of_investment.js","js/CONSTANTS.js","js/helpers/getInterestRate.js","js/type_of_deposit.js","js/helpers/getDateNow.js","js/datepicker.js","js/investment_term.js","index.js"],"names":["refs","select","document","querySelector","selectCurrent","selectDrop","currency","amountInvestmentRange","amountInvestmentInput","currentCurrencyValue","querySelectorAll","currentInvestment","rate","interestRate","startDate","endDate","currentCurrency","e","target","nodeName","classList","remove","nextCurrentActiveCurrency","add","selectedCurrency","dataset","value","forEach","i","textContent","addEventListener","getAmountOfInvestment","currentTarget","TYPE_STANDARD","TYPE_PREMIUM","TYPE_VIP","STANDARD_PERCENT","PREMIUM_PERCENT","VIP_PERCENT","getInterestRate","type","percent","localStorage","setItem","getTypeOfDeposit","toggle","result","getDateNow","date","term","dd","String","getDate","padStart","mm","getMonth","getFullYear","Date","dateNow","min","$","datepicker","options","console","log","termInvestment","getTermInvestment"],"mappings":"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","file":"src.95474a9b.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  select: document.querySelector('.type__select'),\n  selectCurrent: document.querySelector('.select-current'),\n  selectDrop: document.querySelector('.select-options'),\n\n  currency: document.querySelector('.currency'),\n\n  amountInvestmentRange: document.querySelector('.js__amount-range'),\n  amountInvestmentInput: document.querySelector('.js__amount-input'),\n\n  currentCurrencyValue: document.querySelectorAll('.js__current-currency'),\n  currentInvestment: document.querySelector('.js__current-investment'),\n  rate: document.querySelector('.js__rate'),\n  interestRate: document.querySelector('.js__interest-rate'),\n\n  startDate: document.querySelector('.js__datepicker-start'),\n  endDate: document.querySelector('.js__datepicker-end'),\n};\nexport default refs;\n","import './refs';\n","import refs from './refs';\nconst { currency, currentCurrencyValue } = refs;\n\nconst currentCurrency = e => {\n  if (e.target.nodeName !== 'BUTTON') return;\n\n  const currentActiveCurrency = document.querySelector('.currency__button--current');\n  currentActiveCurrency.classList.remove('currency__button--current');\n\n  const nextCurrentActiveCurrency = e.target;\n  nextCurrentActiveCurrency.classList.add('currency__button--current');\n  const selectedCurrency = nextCurrentActiveCurrency.dataset.value;\n  currentCurrencyValue.forEach(i => (i.textContent = selectedCurrency));\n  return selectedCurrency;\n};\n\ncurrency.addEventListener('click', currentCurrency);\n","import refs from './refs';\nconst { amountInvestmentRange, amountInvestmentInput, currentInvestment } = refs;\n\nconst getAmountOfInvestment = e => {\n  let value = 0;\n  value = e.currentTarget.value;\n  amountInvestmentInput.value = value;\n  amountInvestmentRange.value = value;\n  currentInvestment.textContent = value;\n};\n\namountInvestmentRange.addEventListener('change', getAmountOfInvestment);\namountInvestmentInput.addEventListener('input', getAmountOfInvestment);\n","const TYPE_STANDARD = 'Standard';\nconst TYPE_PREMIUM = 'Premium';\nconst TYPE_VIP = 'VIP';\n\nconst STANDARD_PERCENT = 0.25;\nconst PREMIUM_PERCENT = 0.5;\nconst VIP_PERCENT = 0.75;\n\nexport { TYPE_STANDARD, TYPE_PREMIUM, TYPE_VIP, STANDARD_PERCENT, PREMIUM_PERCENT, VIP_PERCENT };\n","import refs from '../refs';\nconst { interestRate, rate } = refs;\nimport {\n  TYPE_STANDARD,\n  TYPE_PREMIUM,\n  TYPE_VIP,\n  STANDARD_PERCENT,\n  PREMIUM_PERCENT,\n  VIP_PERCENT,\n} from '../CONSTANTS';\n\nconst getInterestRate = type => {\n  let percent;\n\n  switch (type) {\n    case TYPE_STANDARD:\n      percent = STANDARD_PERCENT;\n      break;\n    case TYPE_PREMIUM:\n      percent = PREMIUM_PERCENT;\n      break;\n    case TYPE_VIP:\n      percent = VIP_PERCENT;\n      break;\n\n    default:\n      percent = 0;\n  }\n  localStorage.setItem('interest rate', percent);\n  interestRate.textContent = `${percent}%`;\n};\nexport { getInterestRate };\n","import refs from './refs';\nconst { select, selectDrop, selectCurrent } = refs;\n\nimport { getInterestRate } from './helpers/getInterestRate';\nconst getTypeOfDeposit = e => {\n  selectDrop.classList.toggle('is-open');\n  if (e.target.classList.value != 'select-item') return;\n  const result = e.target.textContent;\n  selectCurrent.textContent = result;\n  getInterestRate(result);\n\n  localStorage.setItem('typeOfDeposit', result);\n};\n\ngetInterestRate(selectCurrent.textContent);\n\nselect.addEventListener('click', getTypeOfDeposit);\n","const getDateNow = (date, term) => {\n  const dd = String(date.getDate()).padStart(2, '0');\n  const mm = String(date.getMonth() + 1).padStart(2, '0');\n  const yyyy = date.getFullYear();\n  const result = `${yyyy}-${mm}-${dd}`;\n  return result;\n};\n\nexport { getDateNow };\n","import refs from './refs';\nconst { startDate, endDate } = refs;\n\nimport { getDateNow } from './helpers/getDateNow';\n\nconst date = new Date();\n\nconst dateNow = getDateNow(date);\nstartDate.min = dateNow;\nstartDate.value = dateNow;\n\nendDate.min = dateNow;\n\n$('.datepicker').datepicker();\n\nconst options = $('.datepicker').datepicker('options', 'disabled');\n\nconsole.log(options);\n","const termInvestment = document.querySelector('.js__term-investment');\nconst getTermInvestment = e => {\n  const result = +e.target.value;\n  return result;\n};\n\ntermInvestment.addEventListener('change', getTermInvestment);\n","import './main.scss';\n\nimport './js/main';\nimport './js/currency';\nimport './js/amount_of_investment';\nimport './js/type_of_deposit';\nimport './js/datepicker';\nimport './js/investment_term';\n"]}