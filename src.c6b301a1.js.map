{"version":3,"sources":["js/refs.js","js/CONSTANTS.js","js/main.js","js/currency.js","js/amount_of_investment.js","js/helpers/getInterestRate.js","js/type_of_deposit.js","js/investment_term.js","index.js"],"names":["refs","select","document","querySelector","selectCurrent","selectDrop","currency","currentCurrencyValue","querySelectorAll","currentActiveCurrency","amountInvestmentRange","amountInvestmentInput","currentInvestment","rate","interestRate","startDate","endDate","TYPE_STANDARD","TYPE_PREMIUM","TYPE_VIP","STANDARD_PERCENT","PREMIUM_PERCENT","VIP_PERCENT","typeOfDeposit","localStorage","getItem","resultOnInvestment","JSON","parse","setItem","stringify","textContent","currentCurrency","e","target","nodeName","classList","remove","nextCurrentActiveCurrency","add","selectedCurrency","dataset","value","forEach","i","result","addEventListener","getAmountOfInvestment","currentTarget","amountOfInvestment","getInterestRate","type","percent","getTypeOfDeposit","toggle","termInvestment","getTermInvestment"],"mappings":"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","file":"src.c6b301a1.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  select: document.querySelector('.type__select'),\n  selectCurrent: document.querySelector('.select-current'),\n  selectDrop: document.querySelector('.select-options'),\n\n  currency: document.querySelector('.currency'),\n  currentCurrencyValue: document.querySelectorAll('.js__current-currency'),\n  currentActiveCurrency: document.querySelector('.currency__button--current'),\n\n  amountInvestmentRange: document.querySelector('.js__amount-range'),\n  amountInvestmentInput: document.querySelector('.js__amount-input'),\n\n  currentInvestment: document.querySelector('.js__current-investment'),\n  rate: document.querySelector('.js__rate'),\n  interestRate: document.querySelector('.js__interest-rate'),\n\n  startDate: document.querySelector('.js__datepicker-start'),\n  endDate: document.querySelector('.js__datepicker-end'),\n};\nexport default refs;\n","const TYPE_STANDARD = 'Standard';\nconst TYPE_PREMIUM = 'Premium';\nconst TYPE_VIP = 'VIP';\n\nconst STANDARD_PERCENT = 0.25;\nconst PREMIUM_PERCENT = 0.5;\nconst VIP_PERCENT = 0.75;\n\nexport { TYPE_STANDARD, TYPE_PREMIUM, TYPE_VIP, STANDARD_PERCENT, PREMIUM_PERCENT, VIP_PERCENT };\n","import refs from './refs';\nimport { TYPE_STANDARD, STANDARD_PERCENT } from './CONSTANTS';\nconst { selectCurrent } = refs;\nconst typeOfDeposit = localStorage.getItem('typeOfDeposit');\nconst resultOnInvestment = JSON.parse(localStorage.getItem('resultOnInvestment'));\nif (resultOnInvestment === null)\n  localStorage.setItem(\n    'resultOnInvestment',\n    JSON.stringify({\n      typeOfDeposit: TYPE_STANDARD,\n      interestRate: STANDARD_PERCENT,\n    }),\n  );\n\nselectCurrent.textContent = typeOfDeposit;\n","import refs from './refs';\nconst { currency, currentCurrencyValue, currentActiveCurrency } = refs;\n\nconst currentCurrency = e => {\n  if (e.target.nodeName !== 'BUTTON') return;\n\n  currentActiveCurrency.classList.remove('currency__button--current');\n\n  const nextCurrentActiveCurrency = e.target;\n  nextCurrentActiveCurrency.classList.add('currency__button--current');\n  const selectedCurrency = nextCurrentActiveCurrency.dataset.value;\n  currentCurrencyValue.forEach(i => (i.textContent = selectedCurrency));\n\n  const result = JSON.parse(localStorage.getItem('resultOnInvestment'));\n  result.currency = selectedCurrency;\n  localStorage.setItem('resultOnInvestment', JSON.stringify(result));\n};\n\ncurrency.addEventListener('click', currentCurrency);\n","import refs from './refs';\nconst { amountInvestmentRange, amountInvestmentInput, currentInvestment } = refs;\n\nconst getAmountOfInvestment = e => {\n  let value = 0;\n  value = e.currentTarget.value;\n  amountInvestmentInput.value = value;\n  amountInvestmentRange.value = value;\n  currentInvestment.textContent = value;\n\n  const resultOnInvestment = JSON.parse(localStorage.getItem('resultOnInvestment'));\n  resultOnInvestment.amountOfInvestment = value;\n\n  localStorage.setItem('amount of investment', value);\n  localStorage.setItem('resultOnInvestment', JSON.stringify(resultOnInvestment));\n};\n\namountInvestmentRange.addEventListener('change', getAmountOfInvestment);\namountInvestmentInput.addEventListener('input', getAmountOfInvestment);\n","import refs from '../refs';\nconst { interestRate } = refs;\nimport {\n  TYPE_STANDARD,\n  TYPE_PREMIUM,\n  TYPE_VIP,\n  STANDARD_PERCENT,\n  PREMIUM_PERCENT,\n  VIP_PERCENT,\n} from '../CONSTANTS';\n\nconst getInterestRate = type => {\n  let percent;\n\n  switch (type) {\n    case TYPE_STANDARD:\n      percent = STANDARD_PERCENT;\n      break;\n    case TYPE_PREMIUM:\n      percent = PREMIUM_PERCENT;\n      break;\n    case TYPE_VIP:\n      percent = VIP_PERCENT;\n      break;\n  }\n  interestRate.textContent = `${percent}%`;\n\n  const result = JSON.parse(localStorage.getItem('resultOnInvestment'));\n  if (percent) result.interestRate = percent;\n  localStorage.setItem('resultOnInvestment', JSON.stringify(result));\n};\nexport { getInterestRate };\n","import refs from './refs';\nconst { select, selectDrop, selectCurrent } = refs;\n\nimport { getInterestRate } from './helpers/getInterestRate';\nconst getTypeOfDeposit = e => {\n  selectDrop.classList.toggle('is-open');\n  if (e.target.classList.value != 'select-item') return;\n  const result = e.target.textContent;\n  selectCurrent.textContent = result;\n  getInterestRate(result);\n\n  const resultOnInvestment = JSON.parse(localStorage.getItem('resultOnInvestment'));\n  resultOnInvestment.typeOfDeposit = result;\n\n  localStorage.setItem('resultOnInvestment', JSON.stringify(resultOnInvestment));\n};\n\ngetInterestRate(selectCurrent.textContent);\n\nselect.addEventListener('click', getTypeOfDeposit);\n","const termInvestment = document.querySelector('.js__term-investment');\nconst getTermInvestment = e => {\n  const result = +e.target.value;\n  return result;\n};\n\ntermInvestment.addEventListener('change', getTermInvestment);\n","import './main.scss';\n\nimport './js/main';\nimport './js/currency';\nimport './js/amount_of_investment';\nimport './js/type_of_deposit';\n// import './js/datepicker';\nimport './js/investment_term';\n"]}